import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e,o as n}from"./app-Bqa4xeYI.js";const t="/blog/assets/image-20250920194639885-C8JVIoZ5.png",l="/blog/assets/image-20250920194736578-Crd_oawh.png",h="/blog/assets/image-20250920201738162-B8ugGIHb.png",r="/blog/assets/image-20250920203100490-DRtNR2gO.png",k="/blog/assets/image-20250920203122516-BITYtcev.png",d="/blog/assets/image-20250920203341338-0oZ38Ejb.png",p="/blog/assets/image-20250920203903735-Dg6Dv8Mn.png",o="/blog/assets/image-20250920204345160-vORittuF.png",g="/blog/assets/image-20250920212312462-BthkKBto.png",c="/blog/assets/image-20250920212429387-CcuupwAm.png",b="/blog/assets/image-20250920213556118-C23nLq_y.png",u="/blog/assets/image-20250920213637731-BZPjxXIw.png",m="/blog/assets/image-20250920214621252-BgZjeWUf.png",A="/blog/assets/image-20250921194712690-BhPYDJuq.png",v="/blog/assets/image-20250921200349971-BQ1CtY6u.png",y="/blog/assets/image-20250921201506536-B0eSk54r.png",f="/blog/assets/image-20250921205117220-Cs9P9vTF.png",F="/blog/assets/image-20250921210754663-CqHycTzt.png",E="/blog/assets/image-20250920215144431-DzPhTPT2.png",C={};function x(_,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="kafka" tabindex="-1"><a class="header-anchor" href="#kafka"><span>Kafka</span></a></h1><h2 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h2><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><blockquote><p><strong>Kafka的核心作用就是用来收集并处理庞大复杂的应用日志</strong></p></blockquote><ol><li>数据吞吐量很大：能够快速收集各个渠道的海量日志</li><li>集群容错性高：允许集群中少量节点崩溃</li><li><strong>功能不需要太复杂：Kafka的设计目标是高吞吐、低延迟和可扩展性，主要关注消息传递而不是消息处理。所以，Kafka并没有死信队列、顺序消息等高级功能</strong></li></ol><h3 id="搭建单机版" tabindex="-1"><a class="header-anchor" href="#搭建单机版"><span>搭建单机版</span></a></h3><h4 id="jdk配置" tabindex="-1"><a class="header-anchor" href="#jdk配置"><span>jdk配置</span></a></h4><blockquote><p><strong>注意：Kafka和zookeeper都需要有Java的环境，所以安装前，需要确保存在Java环境</strong></p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下面的环境需要jdk17的支持</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://download.oracle.com/java/17/archive/jdk-17.0.12_linux-x64_bin.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解压文件然后执行配置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#这里是刚刚解压缩的位置,后期要更改jdk版本，只需要改这里即可</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">JAVA_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/root/jdk-17.0.12</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$JAVA_HOME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/bin:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CLASSPATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$JAVA_HOME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/lib/dt.jar:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$JAVA_HOME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/lib/tools.jar</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> JAVA_HOME</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PATH</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> CLASSPATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 刷新配置</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="安装zookeeper" tabindex="-1"><a class="header-anchor" href="#安装zookeeper"><span>安装zookeeper</span></a></h4><p>官方地址：<a href="https://zookeeper.apache.org/releases.html" target="_blank" rel="noopener noreferrer">Apache ZooKeeper</a></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下载包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.aliyun.com/apache/zookeeper/zookeeper-3.8.5/apache-zookeeper-3.8.5-bin.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#解压</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -zxf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apache-zookeeper-3.8.5-bin.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进入解压后的conf文件夹，复制一份配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zoo_sample.cfg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  zoo.cfg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 后台启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bin/zkServer.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用jps查看是否启动成功 或者查看输出日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动成功就不用管了，这里暂时先退出Zookeeper</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">kill</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -9</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2150</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="image-20250920194639885" tabindex="0" loading="lazy"><figcaption>image-20250920194639885</figcaption></figure><figure><img src="'+l+`" alt="image-20250920194736578" tabindex="0" loading="lazy"><figcaption>image-20250920194736578</figcaption></figure><h4 id="安装kafaka" tabindex="-1"><a class="header-anchor" href="#安装kafaka"><span>安装kafaka</span></a></h4><p>官方地址：<a href="https://kafka.apache.org/downloads" target="_blank" rel="noopener noreferrer">Apache Kafka</a></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下载源码包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.dotsrc.org/apache/kafka/3.8.0/kafka_2.13-3.8.0.tgz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解压</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -zxvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kafka_2.13-3.8.0.tgz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 后台启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bin/kafka-server-start.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config/server.properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看jps</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+h+'" alt="image-20250920201738162" tabindex="0" loading="lazy"><figcaption>image-20250920201738162</figcaption></figure><h4 id="其它命令" tabindex="-1"><a class="header-anchor" href="#其它命令"><span>其它命令</span></a></h4><blockquote><p><strong>注意：请先确保Kafka和Zookeeper服务都启动起来了再运行</strong></p></blockquote><h5 id="创建topic" tabindex="-1"><a class="header-anchor" href="#创建topic"><span><strong>创建topic</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-topics.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+r+'" alt="image-20250920203100490" tabindex="0" loading="lazy"><figcaption>image-20250920203100490</figcaption></figure><h5 id="查看topic列表" tabindex="-1"><a class="header-anchor" href="#查看topic列表"><span><strong>查看topic列表</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-topics.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+k+`" alt="image-20250920203122516" tabindex="0" loading="lazy"><figcaption>image-20250920203122516</figcaption></figure><h5 id="创建生产者" tabindex="-1"><a class="header-anchor" href="#创建生产者"><span><strong>创建生产者</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#创建一个基于控制台的生产者，往kafka指定topic发消息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-console-producer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="image-20250920203341338" tabindex="0" loading="lazy"><figcaption>image-20250920203341338</figcaption></figure><h5 id="创建消费者" tabindex="-1"><a class="header-anchor" href="#创建消费者"><span><strong>创建消费者</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建一个基于控制台的消费者，在test的topic中消费消息（默认从队列的最后消费）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-console-consumer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+`" alt="image-20250920203903735" tabindex="0" loading="lazy"><figcaption>image-20250920203903735</figcaption></figure><blockquote><p><strong>这里没有打印到生产者的消息，是因为如果没有指定 offset，当前消费者只会消费本身进程启动后，生产者发送的最新消息；可以使用<code>--from-beginning</code>消费topic中已有的全部消息</strong></p></blockquote><h5 id="从头开始消费" tabindex="-1"><a class="header-anchor" href="#从头开始消费"><span><strong>从头开始消费</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建一个基于控制台的消费者，在test的topic中，从头开始消费消息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-console-consumer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --from-beginning</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+`" alt="image-20250920204345160" tabindex="0" loading="lazy"><figcaption>image-20250920204345160</figcaption></figure><h5 id="指定位置消费" tabindex="-1"><a class="header-anchor" href="#指定位置消费"><span><strong>指定位置消费</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  创建一个基于控制台的消费者，在指定topic中从第二条消息（下标默认从0开始）开始消费</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-console-consumer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --partition</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --offset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+g+'" alt="image-20250920212312462" tabindex="0" loading="lazy"><figcaption>image-20250920212312462</figcaption></figure><figure><img src="'+c+`" alt="image-20250920212429387" tabindex="0" loading="lazy"><figcaption>image-20250920212429387</figcaption></figure><h5 id="不同消费者组消费" tabindex="-1"><a class="header-anchor" href="#不同消费者组消费"><span><strong>不同消费者组消费</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建testGroup的消费者组</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-console-consumer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> testGroup</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --from-beginning</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建testGroup2的消费者组</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-console-consumer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> testGroup</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --from-beginning</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+b+'" alt="image-20250920213556118" tabindex="0" loading="lazy"><figcaption>image-20250920213556118</figcaption></figure><figure><img src="'+u+'" alt="image-20250920213637731" tabindex="0" loading="lazy"><figcaption>image-20250920213637731</figcaption></figure><h5 id="查看消费者组里消费情况" tabindex="-1"><a class="header-anchor" href="#查看消费者组里消费情况"><span><strong>查看消费者组里消费情况</strong></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-consumer-groups.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localhost:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --describe</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> testGroup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+m+'" alt="image-20250920214621252" tabindex="0" loading="lazy"><figcaption>image-20250920214621252</figcaption></figure><ul><li><strong>GROUP：消费者组名称</strong></li><li><strong>TOPIC：主题名称</strong></li><li><strong>PARTITION：分区编号</strong></li><li><strong>CURRENT-OFFSET：当前消费消息的offset位置</strong></li><li><strong>LOG-END-OFFSET：总共的offset位置</strong></li><li><strong>LAG：还有多少条没消费</strong></li></ul><h3 id="搭建集群版" tabindex="-1"><a class="header-anchor" href="#搭建集群版"><span>搭建集群版</span></a></h3><figure><img src="'+A+`" alt="image-20250921194712690" tabindex="0" loading="lazy"><figcaption>image-20250921194712690</figcaption></figure><blockquote><p><strong>为什么需要集群？</strong></p><p><strong>单机服务下，Kafka已经具备非常高的性能，但是单机版的Kafka会有很大的局限性，因此需要集群</strong></p><ul><li><strong>单机磁盘有限，Broker的Topic消息不断增多难以承载。集群就可以把这些消息会分成不同的Partition，分布到不同的Broker上，从而突破单机限制</strong></li><li><strong>如果单机服务崩溃，数据容易丢失，服务不稳定。为了保证数据安全，集群给每个Partition配置一个或多个副本，通过Zookeeper选举主节点Leader，其它节点就是从节点Follower。主节点负责响应客户端业务，从节点负责同步主节点数据</strong></li><li><strong>Zookeeper会保存Kafka的Broker信息、Partition选举信息，当某些Broker服务崩溃时会自动选举，确保系统高可用</strong></li></ul></blockquote><h4 id="部署zookeeper集群" tabindex="-1"><a class="header-anchor" href="#部署zookeeper集群"><span>部署Zookeeper集群</span></a></h4><blockquote><p><strong>这里以1个集群为例，如果有多个，直接按照对应的步骤配置启动即可</strong></p></blockquote><ul><li><strong>修改每个服务器的Zookeeper的配置文件</strong></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 找到自己安装Zookeeper的位置，更改conf配置文件的zoo.cfg</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  		如果没有这个文件，可以cp zoo_sample.cfg zoo.cfg然后编辑</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  zoo.cfg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+`" alt="image-20250921200349971" tabindex="0" loading="lazy"><figcaption>image-20250921200349971</figcaption></figure><p><strong>注意：每个服务器上的<code>server.x</code>配置要一致，这样才能知道哪些服务器上可以进行通信</strong></p><ul><li><strong>设置当前地址的myid</strong></li></ul><blockquote><p><strong>注意：这里的myid要和配置文件中<code>server.</code>序号对应上（eg：我这里模拟只有1个，并且本机的ip地址就是<code>server.1</code>后面的地址，那么本机的myid就是<code>1</code>；如果有多个服务器，那么在其它服务器上按照IP地址配置<code>server.</code>后面的数字即可）</strong></p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在刚刚dataDir里面配置myid</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /root/zookeeper/data</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /root/zookeeper/data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 写入当前的编号</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">myid</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>依次启动每个服务器的各个Zookeeper节点</strong></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/zkServer.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="`+y+`" alt="image-20250921201506536" tabindex="0" loading="lazy"><figcaption>image-20250921201506536</figcaption></figure><h4 id="部署kafka集群" tabindex="-1"><a class="header-anchor" href="#部署kafka集群"><span>部署Kafka集群</span></a></h4><ul><li><strong>修改每个服务器上Kafka的配置文件</strong></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 找到自己安装Kafka的根目录，然后修改配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config/server.properties</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 当前服务器的broker在集群中的id是多少,全局唯一，不能重复，只能是数字</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">broker.id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 监听的本机Kafka地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">listeners</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PLAINTEXT://172.28.230.134:9092</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 自定义配置数据文件的地址</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log.dirs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=/root/kafka_2.13-3.8.0/kafka-logs</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 配置Zookeeper的连接地址</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zookeeper.connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=172.28.230.134:2181</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：这里我只用了1个Zookeeper集群，所以这里的地址只有一个；如果你上面搭建了多个Zookeeper集群，那么这里就要把所有的集群都配置上，以逗号分开</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># eg：三个Zookeeper集群，默认情况下所有的Zookeeper数据会被保存到Zookeeper的根路径下,如果不想注册到根路径下，可以设置指定路径(eg：172.28.230.132:2181/my)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zookeeper.connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=172.28.230.134:2181,172.28.230.133:2181,172.28.230.132:2181</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><ul><li><strong>启动每个服务器的Kafka节点</strong></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bin/kafka-server-start.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config/server.properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hup.out</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+f+`" alt="image-20250921205117220" tabindex="0" loading="lazy"><figcaption>image-20250921205117220</figcaption></figure><h4 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h4><blockquote><p><strong>假设有三台服务器：<code>worker1:9092、worker2:9092、worker3:9092</code>，它们对应的broker的id和myid是<code>1、2、3</code></strong></p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在worker1:9092这个服务器上创建disTopic主题，其中副本数量为2，分区为4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-topics.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> worker1:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --replication-factor</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --partitions</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> disTopic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看disTopic主题的信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/kafka-topics.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> worker1:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --describe</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> disTopic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+F+'" alt="image-20250921210754663" tabindex="0" loading="lazy"><figcaption>image-20250921210754663</figcaption></figure><ul><li><strong>replication-factor 2 ：每个分区总共有2个副本，1个Leader+1个follower（eg：分区0的Leader是broker 2，follower是broker 1保存副本）</strong></li><li><strong>partitions 4：当前topic会有4个分区，0~3</strong></li><li><strong>Leader：表示主节点的broker id（eg：分区0的主节点是broker 2）</strong></li></ul><h4 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h4><blockquote><p><strong>1. Kafka 中的 Topic 是集群共享的，不管你在哪个 Broker 上创建 Topic，Kafka 会自动把分区和副本分散到集群里的不同 Broker 上，保证负载均衡和高可用性。</strong></p><p><strong>2.当你向集群中的Follower收、发消息时，Kafka内部会找到Leader并往内部读、写消息，随后Leader会发送消息给Follower去同步消息（eg：上面的分区0，Leader是broker 2，我指定向broker1发送消息，内部还是会发送给broker2，然后会同步给broker1）</strong></p></blockquote><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><figure><img src="'+E+'" alt="image-20250920215144431" tabindex="0" loading="lazy"><figcaption>image-20250920215144431</figcaption></figure><h3 id="broker" tabindex="-1"><a class="header-anchor" href="#broker"><span>Broker</span></a></h3><ul><li><strong>一个Kafka服务器就是一个Broker</strong></li></ul><h3 id="topic-主题" tabindex="-1"><a class="header-anchor" href="#topic-主题"><span>Topic（主题）</span></a></h3><ul><li>每条发布到Kafka中的消息都有一个类别，这个类别就是Topic，<strong>这是一个逻辑概念</strong></li><li><strong>Topic并不是一个单一的消息队列，而是可以创建多个Partition</strong></li></ul><h3 id="partition-分区" tabindex="-1"><a class="header-anchor" href="#partition-分区"><span>Partition（分区）</span></a></h3><ul><li><strong>当发送消息给Topic时，消息真正存放在Partition中。默认情况创建1个Partition（编号从0开始）</strong></li><li><strong>Partition内的消息有序（FIFO）</strong>，但全局顺序不保证</li><li><strong>不同消费者可以同时消费不同Partition，实现负载均衡</strong></li></ul><h3 id="offset-偏移量" tabindex="-1"><a class="header-anchor" href="#offset-偏移量"><span>offset（偏移量）</span></a></h3><ul><li><strong>每条消息在Partition内都有一个递增的offset（从0开始，顺序递增），用来标识消息的唯一位置</strong></li><li><strong>每个Partition的offset独立，可以指定从Partition的哪个offset开始消费</strong></li><li><strong>同一消费者组里的消费者共享offset（即组内最新的消费位置）；不同消费者组的offset独立</strong></li></ul><h3 id="consumer-group-消费者组" tabindex="-1"><a class="header-anchor" href="#consumer-group-消费者组"><span>Consumer Group（消费者组）</span></a></h3><ul><li><p>每个消费者可以指定所属消费者组</p></li><li><p><strong>同一消费者组：组件消费者都共享Partition，每条消息只会被组内任意一个消费者处理一次</strong></p></li><li><p><strong>不同消费者组：不同组独立消费，同一条消息可以被不同组的任意消费者各消费一次（即不同组可以消费同一条消息）</strong></p></li></ul>',98)]))}const B=s(C,[["render",x]]),K=JSON.parse('{"path":"/backend/framework/mq/Kafka.html","title":"Kafka","lang":"zh-CN","frontmatter":{"description":"Kafka 快速上手 特点 Kafka的核心作用就是用来收集并处理庞大复杂的应用日志 数据吞吐量很大：能够快速收集各个渠道的海量日志 集群容错性高：允许集群中少量节点崩溃 功能不需要太复杂：Kafka的设计目标是高吞吐、低延迟和可扩展性，主要关注消息传递而不是消息处理。所以，Kafka并没有死信队列、顺序消息等高级功能 搭建单机版 jdk配置 注意：K...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/backend/framework/mq/Kafka.html"}],["meta",{"property":"og:site_name","content":"九龙坡郭富城的博客"}],["meta",{"property":"og:title","content":"Kafka"}],["meta",{"property":"og:description","content":"Kafka 快速上手 特点 Kafka的核心作用就是用来收集并处理庞大复杂的应用日志 数据吞吐量很大：能够快速收集各个渠道的海量日志 集群容错性高：允许集群中少量节点崩溃 功能不需要太复杂：Kafka的设计目标是高吞吐、低延迟和可扩展性，主要关注消息传递而不是消息处理。所以，Kafka并没有死信队列、顺序消息等高级功能 搭建单机版 jdk配置 注意：K..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-21T13:47:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-21T13:47:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kafka\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-21T13:47:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Eobard Thawne\\",\\"url\\":\\"https://gitee.com/eobard721\\"}]}"]]},"headers":[{"level":2,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"搭建单机版","slug":"搭建单机版","link":"#搭建单机版","children":[]},{"level":3,"title":"搭建集群版","slug":"搭建集群版","link":"#搭建集群版","children":[]}]},{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"Broker","slug":"broker","link":"#broker","children":[]},{"level":3,"title":"Topic（主题）","slug":"topic-主题","link":"#topic-主题","children":[]},{"level":3,"title":"Partition（分区）","slug":"partition-分区","link":"#partition-分区","children":[]},{"level":3,"title":"offset（偏移量）","slug":"offset-偏移量","link":"#offset-偏移量","children":[]},{"level":3,"title":"Consumer Group（消费者组）","slug":"consumer-group-消费者组","link":"#consumer-group-消费者组","children":[]}]}],"git":{"createdTime":1758383181000,"updatedTime":1758462433000,"contributors":[{"name":"Eobard","email":"2209473452@qq.com","commits":4}]},"readingTime":{"minutes":7.48,"words":2245},"filePathRelative":"backend/framework/mq/Kafka.md","localizedDate":"2025年9月20日","excerpt":"\\n<h2>快速上手</h2>\\n<h3>特点</h3>\\n<blockquote>\\n<p><strong>Kafka的核心作用就是用来收集并处理庞大复杂的应用日志</strong></p>\\n</blockquote>\\n<ol>\\n<li>数据吞吐量很大：能够快速收集各个渠道的海量日志</li>\\n<li>集群容错性高：允许集群中少量节点崩溃</li>\\n<li><strong>功能不需要太复杂：Kafka的设计目标是高吞吐、低延迟和可扩展性，主要关注消息传递而不是消息处理。所以，Kafka并没有死信队列、顺序消息等高级功能</strong></li>\\n</ol>\\n<h3>搭建单机版</h3>\\n<h4>jdk配置</h4>","autoDesc":true}');export{B as comp,K as data};
